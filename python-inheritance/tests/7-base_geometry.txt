BaseGeometry instantiation

>>> import importlib.util
>>> import sys
>>> spec = importlib.util.spec_from_file_location("base_geometry", "7-base_geometry.py")
>>> base_geometry = importlib.util.module_from_spec(spec)
>>> sys.modules["base_geometry"] = base_geometry
>>> spec.loader.exec_module(base_geometry)
>>> BaseGeometry = base_geometry.BaseGeometry
>>> bg = BaseGeometry()

BaseGeometry.area()

>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

BaseGeometry.integer_validator()

>>> bg.integer_validator("age", 1)

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> bg.integer_validator("age", -4)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
